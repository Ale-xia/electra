syntax = "proto3";
package electra.meter;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "meter/params.proto";
import "meter/meterreadings.proto";
import "meter/meterdirectory.proto";
import "meter/power_purchase_contract.proto";
import "meter/ppa_map.proto";
import "meter/billingcycles.proto";
import "meter/customerbillingline.proto";
import "meter/customerbills.proto";
import "meter/producerbillingline.proto";
import "meter/producerbills.proto";
// this line is used by starport scaffolding # 1

option go_package = "electra/x/meter/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/electra/meter/params";
  }
  // Queries a Meterreadings by index.
	rpc Meterreadings(QueryGetMeterreadingsRequest) returns (QueryGetMeterreadingsResponse) {
		option (google.api.http).get = "/electra/meter/meterreadings/{deviceID}/{timestamp}";
	}

	// Queries a list of Meterreadings items.
	rpc MeterreadingsAll(QueryAllMeterreadingsRequest) returns (QueryAllMeterreadingsResponse) {
		option (google.api.http).get = "/electra/meter/meterreadings";
	}

// Queries a Meterdirectory by index.
	rpc Meterdirectory(QueryGetMeterdirectoryRequest) returns (QueryGetMeterdirectoryResponse) {
		option (google.api.http).get = "/electra/meter/meterdirectory/{deviceID}/{barcodeserial}";
	}

	// Queries a list of Meterdirectory items.
	rpc MeterdirectoryAll(QueryAllMeterdirectoryRequest) returns (QueryAllMeterdirectoryResponse) {
		option (google.api.http).get = "/electra/meter/meterdirectory";
	}

// Queries a list of Listrecordings items.
	rpc Listrecordings(QueryListrecordingsRequest) returns (QueryListrecordingsResponse) {
		option (google.api.http).get = "/electra/meter/listrecordings/{deviceID}/{start}/{end}/{byUnixTime}";
	}

// Queries a PowerPurchaseContract by index.
	rpc PowerPurchaseContract(QueryGetPowerPurchaseContractRequest) returns (QueryGetPowerPurchaseContractResponse) {
		option (google.api.http).get = "/electra/meter/power_purchase_contract/{contractID}/{contractDeviceID}";
	}

	// Queries a list of PowerPurchaseContract items.
	rpc PowerPurchaseContractAll(QueryAllPowerPurchaseContractRequest) returns (QueryAllPowerPurchaseContractResponse) {
		option (google.api.http).get = "/electra/meter/power_purchase_contract";
	}

// Queries a PpaMap by index.
	rpc PpaMap(QueryGetPpaMapRequest) returns (QueryGetPpaMapResponse) {
		option (google.api.http).get = "/electra/meter/ppa_map/{consumerDeviceID}/{agreementID}/{agreementActive}/{contractID}";
	}

	// Queries a list of PpaMap items.
	rpc PpaMapAll(QueryAllPpaMapRequest) returns (QueryAllPpaMapResponse) {
		option (google.api.http).get = "/electra/meter/ppa_map";
	}

// Queries a Billingcycles by index.
	rpc Billingcycles(QueryGetBillingcyclesRequest) returns (QueryGetBillingcyclesResponse) {
		option (google.api.http).get = "/electra/meter/billingcycles/{cycleID}";
	}

	// Queries a list of Billingcycles items.
	rpc BillingcyclesAll(QueryAllBillingcyclesRequest) returns (QueryAllBillingcyclesResponse) {
		option (google.api.http).get = "/electra/meter/billingcycles";
	}

// Queries a Customerbillingline by index.
	rpc Customerbillingline(QueryGetCustomerbillinglineRequest) returns (QueryGetCustomerbillinglineResponse) {
		option (google.api.http).get = "/electra/meter/customerbillingline/{customerdeviceID}/{cycleID}/{lineid}";
	}

	// Queries a list of Customerbillingline items.
	rpc CustomerbillinglineAll(QueryAllCustomerbillinglineRequest) returns (QueryAllCustomerbillinglineResponse) {
		option (google.api.http).get = "/electra/meter/customerbillingline";
	}

// Queries a Customerbills by index.
	rpc Customerbills(QueryGetCustomerbillsRequest) returns (QueryGetCustomerbillsResponse) {
		option (google.api.http).get = "/electra/meter/customerbills/{billCycleID}/{customerdeviceID}";
	}

	// Queries a list of Customerbills items.
	rpc CustomerbillsAll(QueryAllCustomerbillsRequest) returns (QueryAllCustomerbillsResponse) {
		option (google.api.http).get = "/electra/meter/customerbills";
	}

// Queries a Producerbillingline by index.
	rpc Producerbillingline(QueryGetProducerbillinglineRequest) returns (QueryGetProducerbillinglineResponse) {
		option (google.api.http).get = "/electra/meter/producerbillingline/{producerDeviceID}/{cycleID}/{lineid}";
	}

	// Queries a list of Producerbillingline items.
	rpc ProducerbillinglineAll(QueryAllProducerbillinglineRequest) returns (QueryAllProducerbillinglineResponse) {
		option (google.api.http).get = "/electra/meter/producerbillingline";
	}

// Queries a Producerbills by index.
	rpc Producerbills(QueryGetProducerbillsRequest) returns (QueryGetProducerbillsResponse) {
		option (google.api.http).get = "/electra/meter/producerbills/{billCycleID}/{producerdeviceID}";
	}

	// Queries a list of Producerbills items.
	rpc ProducerbillsAll(QueryAllProducerbillsRequest) returns (QueryAllProducerbillsResponse) {
		option (google.api.http).get = "/electra/meter/producerbills";
	}

// Queries a list of Getcustomerbill items.
	rpc Getcustomerbill(QueryGetcustomerbillRequest) returns (QueryGetcustomerbillResponse) {
		option (google.api.http).get = "/electra/meter/getcustomerbill/{customerdeviceID}/{billCycleID}";
	}

// Queries a list of Getproducerbill items.
	rpc Getproducerbill(QueryGetproducerbillRequest) returns (QueryGetproducerbillResponse) {
		option (google.api.http).get = "/electra/meter/getproducerbill/{producerdeviceID}/{billCycleID}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMeterreadingsRequest {
	  string deviceID = 1;
  uint64 timestamp = 2;

}

message QueryGetMeterreadingsResponse {
	Meterreadings meterreadings = 1 [(gogoproto.nullable) = false];
}

message QueryAllMeterreadingsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMeterreadingsResponse {
	repeated Meterreadings meterreadings = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetMeterdirectoryRequest {
	  string deviceID = 1;
  string barcodeserial = 2;

}

message QueryGetMeterdirectoryResponse {
	Meterdirectory meterdirectory = 1 [(gogoproto.nullable) = false];
}

message QueryAllMeterdirectoryRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMeterdirectoryResponse {
	repeated Meterdirectory meterdirectory = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryListrecordingsRequest {
  string deviceID = 1;
  uint64 start = 2;
  uint64 end = 3;
  bool byUnixTime = 4;
  cosmos.base.query.v1beta1.PageRequest pagination = 5;
}

message QueryListrecordingsResponse {
	repeated Meterreadings meterreadings = 1 [(gogoproto.nullable) = false];
  string comments = 2;
  uint64 total = 3;
  cosmos.base.query.v1beta1.PageResponse pagination = 4;
}

message QueryGetPowerPurchaseContractRequest {
	  string contractID = 1;
  string contractDeviceID = 2;

}

message QueryGetPowerPurchaseContractResponse {
	PowerPurchaseContract powerPurchaseContract = 1 [(gogoproto.nullable) = false];
}

message QueryAllPowerPurchaseContractRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPowerPurchaseContractResponse {
	repeated PowerPurchaseContract powerPurchaseContract = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPpaMapRequest {
	  string consumerDeviceID = 1;
  string agreementID = 2;
  bool agreementActive = 3;
  string contractID = 4;

}

message QueryGetPpaMapResponse {
	PpaMap ppaMap = 1 [(gogoproto.nullable) = false];
}

message QueryAllPpaMapRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPpaMapResponse {
	repeated PpaMap ppaMap = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBillingcyclesRequest {
	  uint64 cycleID = 1;

}

message QueryGetBillingcyclesResponse {
	Billingcycles billingcycles = 1 [(gogoproto.nullable) = false];
}

message QueryAllBillingcyclesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBillingcyclesResponse {
	repeated Billingcycles billingcycles = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCustomerbillinglineRequest {
	  string customerdeviceID = 1;
  uint64 cycleID = 2;
  uint64 lineid = 3;

}

message QueryGetCustomerbillinglineResponse {
	Customerbillingline customerbillingline = 1 [(gogoproto.nullable) = false];
}

message QueryAllCustomerbillinglineRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCustomerbillinglineResponse {
	repeated Customerbillingline customerbillingline = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCustomerbillsRequest {
	  uint64 billCycleID = 1;
  string customerdeviceID = 2;

}

message QueryGetCustomerbillsResponse {
	Customerbills customerbills = 1 [(gogoproto.nullable) = false];
}

message QueryAllCustomerbillsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCustomerbillsResponse {
	repeated Customerbills customerbills = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetProducerbillinglineRequest {
	  string producerDeviceID = 1;
  uint64 cycleID = 2;
  uint64 lineid = 3;

}

message QueryGetProducerbillinglineResponse {
	Producerbillingline producerbillingline = 1 [(gogoproto.nullable) = false];
}

message QueryAllProducerbillinglineRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProducerbillinglineResponse {
	repeated Producerbillingline producerbillingline = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetProducerbillsRequest {
	  uint64 billCycleID = 1;
  string producerdeviceID = 2;

}

message QueryGetProducerbillsResponse {
	Producerbills producerbills = 1 [(gogoproto.nullable) = false];
}

message QueryAllProducerbillsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProducerbillsResponse {
	repeated Producerbills producerbills = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetcustomerbillRequest {
  string customerdeviceID = 1;
  uint64 billCycleID = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryGetcustomerbillResponse {
	repeated Customerbillingline customerbillingline = 1 [(gogoproto.nullable) = false];
  //string listofbillinglines = 1;
  uint64 billTotalWh = 2;
  uint64 billTotalPrice = 3;
  string curency = 4;
  uint64 nblines = 5;
  string comments = 6;
  cosmos.base.query.v1beta1.PageResponse pagination = 7;
}

message QueryGetproducerbillRequest {
  string producerdeviceID = 1;
  uint64 billCycleID = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryGetproducerbillResponse {
	repeated Producerbillingline producerbillingline = 1 [(gogoproto.nullable) = false];
  uint64 billTotalWh = 2;
  uint64 billTotalPrice = 3;
  string curency = 4;
  uint64 nblines = 5;
  string comments = 6;
  cosmos.base.query.v1beta1.PageResponse pagination = 7;
}

// this line is used by starport scaffolding # 3
